{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["import axios from 'axios';\r\nimport 'dotenv/config';\r\n\r\nconst API_KEY = process.env.API_KEY;\r\nconst BASE_URL = 'https://pixabay.com/api/';\r\n\r\nexport function getImagesByQuery(query) {\r\n  const params = {\r\n    key: API_KEY,\r\n    q: query,\r\n    image_type: 'photo',\r\n    orientation: 'horizontal',\r\n    safesearch: true,\r\n  };\r\n\r\n  return axios\r\n    .get(BASE_URL, { params })\r\n    .then(response => response.data)\r\n    .catch(error => {\r\n      console.error('Error fetching images:', error);\r\n      throw new Error('Failed to fetch images from Pixabay.');\r\n    });\r\n}\r\n","import SimpleLightbox from 'simplelightbox';\r\nimport 'simplelightbox/dist/simple-lightbox.min.css';\r\n\r\n// Створюємо екземпляр SimpleLightbox.\r\n// Додайте опції, якщо потрібно, наприклад: { captionsData: 'alt', captionDelay: 250 }\r\nconst lightbox = new SimpleLightbox('.gallery a', {\r\n  captionsData: 'alt',\r\n  captionDelay: 250,\r\n});\r\n\r\n/**\r\n * Створює HTML-розмітку для галереї зображень та додає її в контейнер.\r\n * @param {Array<Object>} images - Масив об'єктів зображень.\r\n */\r\nexport function createGallery(images) {\r\n  const galleryContainer = document.querySelector('.gallery');\r\n  if (!galleryContainer) {\r\n    console.error('Gallery container not found.');\r\n    return;\r\n  }\r\n\r\n  const galleryMarkup = images\r\n    .map(\r\n      image => `\r\n        <li class=\"gallery-item\">\r\n            <a href=\"${image.largeImageURL}\">\r\n                <img class=\"gallery-image\" src=\"${image.webformatURL}\" alt=\"${image.tags}\">\r\n                <div class=\"image-info\">\r\n                    <div class=\"info-item\">\r\n                        <b>Likes</b>\r\n                        <p>${image.likes}</p>\r\n                    </div>\r\n                    <div class=\"info-item\">\r\n                        <b>Views</b>\r\n                        <p>${image.views}</p>\r\n                    </div>\r\n                    <div class=\"info-item\">\r\n                        <b>Comments</b>\r\n                        <p>${image.comments}</p>\r\n                    </div>\r\n                    <div class=\"info-item\">\r\n                        <b>Downloads</b>\r\n                        <p>${image.downloads}</p>\r\n                    </div>\r\n                </div>\r\n            </a>\r\n        </li>\r\n    `\r\n    )\r\n    .join('');\r\n\r\n  galleryContainer.insertAdjacentHTML('beforeend', galleryMarkup);\r\n  lightbox.refresh(); // Оновлюємо SimpleLightbox після додавання нових елементів\r\n}\r\n\r\n/**\r\n * Очищає вміст контейнера галереї.\r\n */\r\nexport function clearGallery() {\r\n  const galleryContainer = document.querySelector('.gallery');\r\n  if (galleryContainer) {\r\n    galleryContainer.innerHTML = '';\r\n  }\r\n}\r\n\r\n/**\r\n * Відображає лоадер.\r\n */\r\nexport function showLoader() {\r\n  const loader = document.querySelector('.loader');\r\n  if (loader) {\r\n    loader.classList.add('is-visible');\r\n  }\r\n}\r\n\r\n/**\r\n * Приховує лоадер.\r\n */\r\nexport function hideLoader() {\r\n  const loader = document.querySelector('.loader');\r\n  if (loader) {\r\n    loader.classList.remove('is-visible');\r\n  }\r\n}\r\n","import { getImagesByQuery } from './js/pixabay-api.js';\r\nimport {\r\n  createGallery,\r\n  clearGallery,\r\n  showLoader,\r\n  hideLoader,\r\n} from './js/render-functions.js';\r\nimport iziToast from 'izitoast';\r\nimport 'izitoast/dist/css/iziToast.min.css';\r\n\r\nconst searchForm = document.querySelector('.form');\r\nconst searchInput = searchForm.elements['search-text'];\r\n\r\nsearchForm.addEventListener('submit', async event => {\r\n  event.preventDefault(); // Запобігаємо стандартній відправці форми\r\n\r\n  const query = searchInput.value.trim(); // Отримуємо пошуковий запит та видаляємо зайві пробіли\r\n\r\n  // Перевірка на порожній рядок\r\n  if (query === '') {\r\n    iziToast.error({\r\n      title: 'Error',\r\n      message: 'Search field cannot be empty!',\r\n      position: 'topRight',\r\n    });\r\n    return; // Припиняємо виконання, якщо поле порожнє\r\n  }\r\n\r\n  clearGallery(); // Очищаємо галерею перед новим пошуком\r\n  showLoader(); // Показуємо лоадер\r\n\r\n  try {\r\n    const data = await getImagesByQuery(query);\r\n\r\n    if (data.hits.length === 0) {\r\n      // Якщо бекенд повернув порожній масив\r\n      iziToast.info({\r\n        // title: 'Info',\r\n        message:\r\n          '❌ Sorry, there are no images matching your search query. Please try again!',\r\n        position: 'topRight',\r\n        icon: false,\r\n        close: false,\r\n        backgroundColor: '#ef4040', // Червоний фон\r\n        maxWidth: '432px', // Задана ширина\r\n        minHeight: '88px', // Мінімальна висота для наближення до 88px\r\n        html: true, // Включаємо підтримку HTML у повідомленні\r\n      });\r\n    } else {\r\n      // Якщо знайдені зображення\r\n      createGallery(data.hits);\r\n    }\r\n  } catch (error) {\r\n    // Обробка помилок HTTP-запиту\r\n    iziToast.error({\r\n      title: 'Error',\r\n      message:\r\n        error.message ||\r\n        'An error occurred while fetching images. Please try again later.',\r\n      position: 'topRight',\r\n    });\r\n  } finally {\r\n    hideLoader(); // Приховуємо лоадер незалежно від результату\r\n    searchForm.reset(); // Очищаємо форму після пошуку\r\n  }\r\n});\r\n"],"names":["API_KEY","define_process_env_default","BASE_URL","getImagesByQuery","query","params","axios","response","error","lightbox","SimpleLightbox","createGallery","images","galleryContainer","galleryMarkup","image","clearGallery","showLoader","loader","hideLoader","searchForm","searchInput","event","iziToast","data"],"mappings":"6wBAGA,MAAMA,EAAUC,EAAY,QACtBC,EAAW,2BAEV,SAASC,EAAiBC,EAAO,CACtC,MAAMC,EAAS,CACb,IAAKL,EACL,EAAGI,EACH,WAAY,QACZ,YAAa,aACb,WAAY,EAAA,EAGd,OAAOE,EACJ,IAAIJ,EAAU,CAAE,OAAAG,CAAQ,CAAA,EACxB,KAAiBE,GAAAA,EAAS,IAAI,EAC9B,MAAeC,GAAA,CACN,cAAA,MAAM,yBAA0BA,CAAK,EACvC,IAAI,MAAM,sCAAsC,CAAA,CACvD,CACL,CCjBA,MAAMC,EAAW,IAAIC,EAAe,aAAc,CAChD,aAAc,MACd,aAAc,GAChB,CAAC,EAMM,SAASC,EAAcC,EAAQ,CACpC,MAAMC,EAAmB,SAAS,cAAc,UAAU,EAC1D,GAAI,CAACA,EAAkB,CACrB,QAAQ,MAAM,8BAA8B,EAC5C,MACD,CAED,MAAMC,EAAgBF,EACnB,IACCG,GAAS;AAAA;AAAA,uBAEQA,EAAM,aAAa;AAAA,kDACQA,EAAM,YAAY,UAAUA,EAAM,IAAI;AAAA;AAAA;AAAA;AAAA,6BAI3DA,EAAM,KAAK;AAAA;AAAA;AAAA;AAAA,6BAIXA,EAAM,KAAK;AAAA;AAAA;AAAA;AAAA,6BAIXA,EAAM,QAAQ;AAAA;AAAA;AAAA;AAAA,6BAIdA,EAAM,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA,KAMvC,EACA,KAAK,EAAE,EAEVF,EAAiB,mBAAmB,YAAaC,CAAa,EAC9DL,EAAS,QAAO,CAClB,CAKO,SAASO,GAAe,CAC7B,MAAMH,EAAmB,SAAS,cAAc,UAAU,EACtDA,IACFA,EAAiB,UAAY,GAEjC,CAKO,SAASI,GAAa,CAC3B,MAAMC,EAAS,SAAS,cAAc,SAAS,EAC3CA,GACFA,EAAO,UAAU,IAAI,YAAY,CAErC,CAKO,SAASC,GAAa,CAC3B,MAAMD,EAAS,SAAS,cAAc,SAAS,EAC3CA,GACFA,EAAO,UAAU,OAAO,YAAY,CAExC,CCzEA,MAAME,EAAa,SAAS,cAAc,OAAO,EAC3CC,EAAcD,EAAW,SAAS,aAAa,EAErDA,EAAW,iBAAiB,SAAU,MAAME,GAAS,CACnDA,EAAM,eAAc,EAEpB,MAAMlB,EAAQiB,EAAY,MAAM,KAAI,EAGpC,GAAIjB,IAAU,GAAI,CAChBmB,EAAS,MAAM,CACb,MAAO,QACP,QAAS,gCACT,SAAU,UAChB,CAAK,EACD,MACD,CAEDP,IACAC,IAEA,GAAI,CACF,MAAMO,EAAO,MAAMrB,EAAiBC,CAAK,EAErCoB,EAAK,KAAK,SAAW,EAEvBD,EAAS,KAAK,CAEZ,QACE,6EACF,SAAU,WACV,KAAM,GACN,MAAO,GACP,gBAAiB,UACjB,SAAU,QACV,UAAW,OACX,KAAM,EACd,CAAO,EAGDZ,EAAca,EAAK,IAAI,CAE1B,OAAQhB,EAAO,CAEde,EAAS,MAAM,CACb,MAAO,QACP,QACEf,EAAM,SACN,mEACF,SAAU,UAChB,CAAK,CACL,QAAY,CACRW,IACAC,EAAW,MAAK,CACjB,CACH,CAAC"}